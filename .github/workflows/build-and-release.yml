name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-2022
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET Framework 3.5
        shell: pwsh
        run: |
          Enable-WindowsOptionalFeature -Online -FeatureName NetFx3 -All -NoRestart -ErrorAction Stop
          
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2
        
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-windows-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-windows-
        
      - name: Restore NuGet packages
        run: nuget restore GameTuner.sln
        
      - name: Build solution (Debug)
        run: msbuild GameTuner.sln /p:Configuration=Debug /p:Platform="Any CPU" /p:TargetFrameworkVersion=v3.5
        
      - name: Build solution (Release)
        run: msbuild GameTuner.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFrameworkVersion=v3.5
        
      - name: Test .NET Framework 3.5 compatibility
        shell: pwsh
        run: |
          $dllPath = "GameTuner.Framework\bin\Release\net35\GameTuner.Framework.dll"
          if (-not (Test-Path $dllPath)) { Write-Error "DLL not found"; exit 1 }
          Add-Type -AssemblyName System.Reflection
          $assembly = [System.Reflection.Assembly]::LoadFile((Resolve-Path $dllPath).Path)
          $targetFramework = $assembly.GetCustomAttributes([System.Runtime.Versioning.TargetFrameworkAttribute], $false)
          if ($targetFramework) { Write-Host "Target Framework: $($targetFramework[0].FrameworkName)" }
          
          $exePath = "GameTuner\bin\Release\net35\GameTuner.exe"
          if (-not (Test-Path $exePath)) { Write-Error "EXE not found"; exit 1 }

      - name: Package release artifacts
        shell: pwsh
        run: |
          $ReleaseDir = "release"
          New-Item -ItemType Directory -Force -Path $ReleaseDir

          Copy-Item "GameTuner\bin\Release\net35\*" -Destination $ReleaseDir -Recurse -Force
          Copy-Item "GameTuner.Framework\bin\Release\net35\*" -Destination $ReleaseDir -Recurse -Force
          Copy-Item "README.md","LICENSE","DISCLAIMER.md" -Destination $ReleaseDir -Force

          $version = if ($env:GITHUB_REF -match 'refs/tags/v(.*)') { $matches[1] } else { "dev-$($env:GITHUB_SHA.Substring(0,7))" }
          $versionLines = @(
            "GameTuner Release Information"
            "============================"
            "Version: $version"
            "Build Date: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss UTC')"
            "Target Framework: .NET Framework 3.5 (CLR v2.0.50727)"
            "Platform: Windows"
            "Commit: $env:GITHUB_SHA"
            ""
            "Requirements:"
            "- Windows with .NET Framework 3.5 or later"
            "- Compatible with .NET Framework 2.0 CLR runtime (v2.0.50727)"
            ""
            "For Linux development, use Mono with .NET Framework 3.5 compatibility."
            "Final testing should be performed on Windows host with CLR v2.0.50727."
          )
          $versionLines | Set-Content -Path "$ReleaseDir\VERSION.txt" -Encoding UTF8

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gametuner-windows-net35
          path: release/
          retention-days: 90
          
      - name: Create release archive
        if: startsWith(github.ref, 'refs/tags/v')
        shell: pwsh
        run: |
          $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          Compress-Archive -Path "release\*" -DestinationPath "GameTuner-v$version-windows-net35.zip"

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: GameTuner-v*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## GameTuner Release

            **Target Framework:** .NET Framework 3.5 (CLR v2.0.50727)  
            **Platform:** Windows

            ### Requirements
            - Windows with .NET Framework 3.5 or later installed
            - Compatible with .NET Framework 2.0 CLR runtime (v2.0.50727)

            ### Development Notes
            - Originally designed for .NET Framework 2.0
            - Built with .NET Framework 3.5 in VS2022 for the same CLR runtime (v2.0.50727)
            - For Linux development, use Mono with .NET Framework 3.5 compatibility
            - Final testing should be performed on Windows host with CLR v2.0.50727

            ### Installation
            1. Download and extract the zip file
            2. Ensure .NET Framework 3.5 is installed on your system
            3. Run `GameTuner.exe`

            ### Files Included
            - `GameTuner.exe` - Main application
            - `GameTuner.Framework.dll` - Core framework library
            - `README.md` - Project documentation
            - `LICENSE` - License information
            - `DISCLAIMER.md` - Important disclaimers
            - `VERSION.txt` - Build and version information
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}